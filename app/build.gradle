apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.targetSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "minhna.android.airchannel"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "API_URL", "\"${astroApiUrl}\"")
        buildConfigField("int", "DB_VERSION", "${dbVersion}")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support.constraint:constraint-layout:$CONSTRAINT_LAYOUT_VERSION"

    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.okhttp3:okhttp:$OK_HTTP_VERSION"
    compile "com.squareup.okhttp3:logging-interceptor:$OK_HTTP_VERSION"
    compile "io.reactivex:rxjava:$RX_JAVA_VERSION"
    compile "io.reactivex:rxandroid:$RX_ANDROID_VERSION"
    compile 'com.jakewharton.rxbinding:rxbinding:1.0.1'
    compile 'com.google.code.gson:gson:2.7'
    compile "com.google.firebase:firebase-auth:$FIREBASE_VERSION"
    compile "com.google.android.gms:play-services-auth:$FIREBASE_VERSION"
    compile "com.google.firebase:firebase-database:$FIREBASE_VERSION"

    compile "com.jakewharton:butterknife:$BUTTER_KNIFE_VERSION"
    annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTER_KNIFE_VERSION"
    //Required by Dagger2
    compile  "com.google.dagger:dagger:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    provided 'org.glassfish:javax.annotation:10.0-b28'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}
apply plugin: 'com.google.gms.google-services'
